#include<bits/stdc++.h> 
using namespace std; 
typedef long long int ll; 

ll gcd(ll a, ll b) 
{ 
	if (!a) 
	return b; 
	return gcd(b%a,a); 
} 

// Here 'a' is integer and 'b' is string. 
// The idea is to make the second number (represented 
// as b) less than and equal to first number by 
// calculating its mod with first integer number 
// using basic mathematics 
ll reduceB(ll a, char b[]) 
{ 

	ll mod = 0; 

	// calculating mod of b with a to make 
	// b like 0 <= b < a 
	for (int i=0; i<strlen(b); i++) 
		mod = (mod*10 + b[i] - '0')%a; 

	return mod; // return modulo 
} 


ll gcdLarge(ll a, char b[]) 
{ 

	ll num = reduceB(a, b); 

	
	return gcd(a, num); 
} 

// Driver program 
int main() 
{ 
	// first number which is integer 
	ll a = 1221; 

	// second number is represented as string because 
	// it can not be handled by integer data type 
	char b[] = "1234567891011121314151617181920212223242526272829"; 

	cout << gcdLarge(a, b); 

	return 0; 
} 
